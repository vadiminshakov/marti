run:
  # Timeout for analysis, e.g. 30s, 5m. Default is 1m.
  deadline: 5m
  # Exit code when at least one issue was found, default is 1
  issues-exit-code: 1
  # Include test files or not, default is true
  tests: true
  # Skip directories
  skip-dirs:
    - vendor
    - .git
    - .github
    - .idea
    - .vscode
    - .gitlab
    - docs
    - testdata
    - internal/mock
    - mocks
    - scripts
    - bin
    - tmp
    - _*

  # Exclude Go standard library
  build-constraints:
    - !darwin
    - !windows
    - !plan9
    - !js
    - !wasm

# This section provides the configuration for the linters.
linters:
  # Explicitly enable linters
  enable:
    # Code style and formatting
    - gofmt
    - goimports
    - gci
    - gocritic
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - revive
    - errcheck
    - exportloopref
    - goconst
    - gocyclo
    - goprintffuncname
    - misspell
    - prealloc
    - wrapcheck
    - wsl
    
  # Disable specific linters that might be too strict or conflict with others
  disable:
    - gochecknoinits   # Allow init functions
    - gosec            # Disable for now as it requires more configuration
    - goerr113         # Errors handling linter
    - gomnd            # Magic number detection
    - godox            # TODO/BUG/FIXME comments linter
    - ifshort          # If statement with short syntax
    - testpackage      # Test package naming
    - nosnakecase      # Handled by revive
    - interfacer       # Deprecated
    - maligned         # Handled by govet fieldalignment
    - deadcode         # Handled by unused
    - exhaustivestruct # Too strict
    - structcheck      # Handled by unused
    - scopelint        # Handled by govet
    - golint           # Replaced by revive

# Linter specific configurations
linters-settings:
  # Configuration for the goimports linter
  goimports:
    # Put imports beginning with prefix after 3rd-party packages.
    # It's a comma-separated list of prefixes.
    local-prefixes: github.com/vadiminshakov/marti
  
  # Configuration for the revive linter (replacement for golint and nosnakecase)
  revive:
    # The default configuration comes from https://github.com/mgechev/revive/blob/master/config/defaults.toml
    rules:
      - name: var-naming
        disabled: false
        arguments:
          - ["ID"] # Allow common initialisms like ID, API, etc.
          - 32
          - "^[a-z][a-zA-Z0-9]*$" # Allow both camelCase and PascalCase
        severity: warning
      - name: package-comments
        disabled: false
      - name: exported
        disabled: false
      - name: var-declaration
        disabled: false
      - name: package-comments
        disabled: false
      - name: range
        disabled: false
      - name: receiver-naming
        disabled: false
      - name: time-naming
        disabled: false
      - name: modifies-value-receiver
        disabled: false
      - name: constant-logical-expr
        disabled: false
      - name: modifies-parameter
        disabled: false
      - name: unused-parameter
        disabled: false
      - name: unreachable-code
        disabled: false
      - name: redefines-builtin-id
        disabled: false
    ignore-generated-header: "" # or a regexp for generated files
    severity: warning
    confidence: 0.8
    errorCode: 1
    warningCode: 1
    
  # Configuration for the unused linter (replacement for deadcode, varcheck, structcheck)
  unused:
    check-exported: false  # Set to true to check exported functions and methods
    
  # Configuration for govet (includes fieldalignment check)
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs: ["Error", "Errorf", "Info", "Infof", "Warn", "Warnf", "Warning", "Warningf", "Fatal", "Fatalf"]
    enable-all: false
    enable:
      - fieldalignment  # Reports structs that would use less memory if their fields were sorted

  # Configuration for the gocritic linter
  gocritic:
    # Enable multiple checks by tags.
    # Run `GL_DEBUG=gocritic golangci-lint run` to see all tags and checks.
    # Empty list enables all checks.
    enabled-tags:
      - performance
      - style
      - experimental
    # Disabled checks.
    disabled-checks:
      - hugeParam
      - rangeValCopy
      - importShadow

# This section provides the configuration for how golangci runs.
issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`.
  # Ex: ".*test.*"
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gosec
        - dupl
        - goconst

    # Exclude known test helpers from some linters
    - path: _test\.go$
      text: 'is in test file'
      linters:
        - gosec

    # Exclude common method required for test helpers
    - path: _test\.go$
      text: 'unused method: .*'
